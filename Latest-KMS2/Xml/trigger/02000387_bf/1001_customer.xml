<?xml version="1.0" encoding="utf-8"?>
<ms2>
	<state name="Wait">
        <onEnter>			
			<action name="오브젝트반응설정한다" arg1="10001092" arg2="0"/>	 <!-- Greeting-->				
			<action name="SetUserValue" key="CustomerEnter" value="0" />	
			<action name="SetUserValue" key="ItemNumber" value="0" />				
        </onEnter>	
				<condition name="UserValue" key="CustomerEnter" value="1" >	
			<transition state="CustomerEnterDelay"/>
		</condition>
	</state>
	
    <state name="CustomerEnterDelay">	
        <onEnter>			
				</onEnter>				
				<condition name="WaitTick" waitTick="1000">		
					<transition state="CustomerEnter"/>		
				</condition>					
    <onExit> 
    </onExit>	
    </state>		
	
    <state name="CustomerEnter" >	
        <onEnter>		
			<action name="몬스터를생성한다" arg1="1001" arg2="0" /> 		
				</onEnter>	
				<condition name="!NPC를감지했으면" arg1="9110" arg2="0">		<!-- 대기열에 아무도 없으면 -->
					<transition state="Patrol03"/>	
				</condition>		
				<condition name="!NPC를감지했으면" arg1="9111" arg2="0">		<!-- 세 번째 대기 손님이 없으면 -->
					<transition state="Patrol01"/>	
				</condition>						
    <onExit> 	
    </onExit>
    </state>	

    <state name="Patrol01">		
        <onEnter>			
			<action name="NPC를이동시킨다" arg1="1001" arg2="MS2PatrolData_101" />					
				</onEnter>	
				<condition name="!NPC를감지했으면" arg1="9112" arg2="0">	<!-- 두 번째 대기 손님이 없으면 -->
			<transition state="Patrol02Delay"/>		
		</condition> 				
    <onExit> 
    </onExit>
    </state>		
	
    <state name="Patrol02Delay">	
        <onEnter>			
				</onEnter>				
				<condition name="WaitTick" waitTick="1000">		
					<transition state="Patrol02"/>		
				</condition>					
    <onExit> 
    </onExit>	
    </state>		
	
    <state name="Patrol02">		
        <onEnter>			
			<action name="NPC를이동시킨다" arg1="1001" arg2="MS2PatrolData_102" />					
				</onEnter>	
				<condition name="!NPC를감지했으면" arg1="9113" arg2="0">	<!-- 첫 번째 대기 손님이 없으면 -->
			<transition state="Patrol03Delay"/>		
		</condition> 				
    <onExit> 
    </onExit>
    </state>		
	
    <state name="Patrol03Delay">	
        <onEnter>			
				</onEnter>				
				<condition name="WaitTick" waitTick="1000">		
					<transition state="Patrol03"/>		
				</condition>					
    <onExit> 
    </onExit>	
    </state>		
	
    <state name="Patrol03">		
        <onEnter>			
			<action name="NPC를이동시킨다" arg1="1001" arg2="MS2PatrolData_103" />					
				</onEnter>	
				<condition name="!NPC를감지했으면" arg1="9113" arg2="0">	<!-- 첫 번째 대기 손님이 없으면 -->
			<transition state="PatrolEndDelay"/>		
		</condition> 				
    <onExit> 
    </onExit>
    </state>		
	
    <state name="PatrolEndDelay">	
        <onEnter>			
				</onEnter>				
				<condition name="WaitTick" waitTick="1000">		
					<transition state="PatrolEnd"/>		
				</condition>					
    <onExit> 
    </onExit>	
    </state>		
	
    <state name="PatrolEnd">		
        <onEnter>						
				</onEnter>	
				<condition name="NPC를감지했으면" arg1="9113" arg2="1001">	<!-- 카운터 앞에 도착했으면 -->
			<transition state="WaitGreeting"/>		
		</condition> 				
    <onExit> 
    </onExit>
    </state>		
	
    <state name="WaitGreeting">	
		<onEnter>
			<action name="오브젝트반응설정한다" arg1="10001092" arg2="1"/>	 <!-- Greeting-->		
			</onEnter>
				<condition name="오브젝트가반응했으면" arg1="10001092" arg2="0"> 	 
					<transition state="OrderRandomPick"/>
				</condition>
		<onExit>	
			<action name="오브젝트반응설정한다" arg1="10001092" arg2="2"/>	 <!-- Greeting-->		
		</onExit> 
    </state>			
	


<!-- 고객 주문 랜덤-->	
	<state name="OrderRandomPick">
		<onEnter>		
		</onEnter>
				<condition name="랜덤조건" arg1="1">
					<transition state="PickItem_30000617"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000618"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000619"/>	
				</condition>	
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000620"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000621"/>	
				</condition>			
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000622"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000623"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000624"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000625"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000626"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000627"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000628"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000629"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000630"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000631"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000632"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000633"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000634"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000635"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000636"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000637"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000638"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000639"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000640"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000641"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000642"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000643"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000644"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000645"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000646"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000647"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000648"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000649"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000650"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000651"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000652"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000653"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000654"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000655"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000656"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000657"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000658"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000659"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000660"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000661"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000662"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000663"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000664"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000665"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000666"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000667"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000668"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000669"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000670"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000671"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000672"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000673"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000674"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000675"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000676"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000677"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000678"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000679"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000680"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000681"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000682"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000683"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000684"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000685"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000686"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000687"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000688"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000689"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000690"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000691"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000692"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000693"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000694"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000695"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000696"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000697"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000698"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000699"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000700"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000701"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000702"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000703"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000704"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000705"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000706"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000707"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000708"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000709"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000710"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000711"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000712"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000713"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000714"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000715"/>	
				</condition>		
				<condition name="랜덤조건" arg1="1">	
					<transition state="PickItem_30000716"/>	
				</condition>						
		<onExit>
		</onExit>
	</state>	
	
<!-- 	30000617 -->
	<state name="PickItem_30000617">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000617" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Field/co_fi_prop_game_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000617"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000617">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000617">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000617">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000618 -->
	<state name="PickItem_30000618">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000618" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Field/co_fi_prop_game_A02.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000618"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000618">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000618">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000618">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000619 -->
	<state name="PickItem_30000619">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000619" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Field/co_fi_prop_lamp_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000619"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000619">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000619">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000619">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	
	
	<state name="PickItem_30000620">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000620" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Henesys/Indoor/he_in_prop_fireplace_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000620"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000620">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000620">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000620">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>		

<!-- 	30000621 -->
	<state name="PickItem_30000621">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000621" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_sandbag_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000621"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000621">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000621">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000621">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000622 -->
	<state name="PickItem_30000622">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000622" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Iceland/Indoor/ic_in_prop_snowball_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000622"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000622">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000622">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000622">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000623 -->
	<state name="PickItem_30000623">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000623" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_bath_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000623"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000623">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000623">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000623">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000624 -->
	<state name="PickItem_30000624">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000624" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_bath_C01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000624"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000624">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000624">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000624">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000625 -->
	<state name="PickItem_30000625">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000625" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_shower_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000625"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000625">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000625">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000625">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000626 -->
	<state name="PickItem_30000626">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000626" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_fridge_C02.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000626"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000626">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000626">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000626">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000627 -->
	<state name="PickItem_30000627">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000627" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_fridge_D03.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000627"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000627">
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000627">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000627">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000628 -->
	<state name="PickItem_30000628">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000628" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_display_C01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000628"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000628">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000628">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000628">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000629 -->
	<state name="PickItem_30000629">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000629" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_fridge_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000629"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000629">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000629">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000629">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000630 -->
	<state name="PickItem_30000630">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000630" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_display_C02.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000630"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000630">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000630">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000630">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000631 -->
	<state name="PickItem_30000631">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000631" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_washstand_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000631"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000631">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000631">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000631">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000632 -->
	<state name="PickItem_30000632">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000632" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_sink_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000632"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000632">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000632">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000632">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000633 -->
	<state name="PickItem_30000633">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000633" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_sink_A03.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000633"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000633">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000633">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000633">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000634 -->
	<state name="PickItem_30000634">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000634" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_tv_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000634"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000634">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000634">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000634">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000635 -->
	<state name="PickItem_30000635">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000635" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_tv_C01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000635"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000635">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000635">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000635">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000636 -->
	<state name="PickItem_30000636">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000636" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_toilet_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000636"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000636">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000636">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000636">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000637 -->
	<state name="PickItem_30000637">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000637" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_washer_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000637"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000637">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000637">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000637">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000638 -->
	<state name="PickItem_30000638">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000638" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_fan_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000638"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000638">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000638">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000638">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000639 -->
	<state name="PickItem_30000639">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000639" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_machine_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000639"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000639">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000639">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000639">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000640 -->
	<state name="PickItem_30000640">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000640" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_cutter_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000640"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000640">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000640">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000640">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000641 -->
	<state name="PickItem_30000641">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000641" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Henesys/Indoor/he_in_prop_kettle_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000641"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000641">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000641">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000641">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000642 -->
	<state name="PickItem_30000642">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000642" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_locker_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000642"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000642">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000642">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000642">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000643 -->
	<state name="PickItem_30000643">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000643" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_locker_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000643"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000643">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000643">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000643">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000644 -->
	<state name="PickItem_30000644">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000644" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Iceland/Indoor/ic_in_cubric_box_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000644"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000644">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000644">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000644">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000645 -->
	<state name="PickItem_30000645">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000645" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Field/tr_fi_prop_swing_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000645"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000645">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000645">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000645">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000646 -->
	<state name="PickItem_30000646">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000646" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/UGC/Indoor/ugc_in_funct_cook_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000646"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000646">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000646">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000646">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000647 -->
	<state name="PickItem_30000647">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000647" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/UGC/Indoor/ugc_in_funct_alchemy_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000647"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000647">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000647">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000647">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000648 -->
	<state name="PickItem_30000648">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000648" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/UGC/Indoor/ugc_in_funct_alchemy_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000648"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000648">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000648">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000648">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000649 -->
	<state name="PickItem_30000649">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000649" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_mirror_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000649"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000649">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000649">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000649">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000650 -->
	<state name="PickItem_30000650">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000650" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_easel_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000650"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000650">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000650">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000650">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000651 -->
	<state name="PickItem_30000651">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000651" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_wardrop_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000651"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000651">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000651">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000651">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000652 -->
	<state name="PickItem_30000652">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000652" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Indoor/co_in_prop_brazier_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000652"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000652">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000652">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000652">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000653 -->
	<state name="PickItem_30000653">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000653" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_tray_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000653"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000653">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000653">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000653">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000654 -->
	<state name="PickItem_30000654">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000654" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_sofa_E01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000654"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000654">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000654">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000654">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000655 -->
	<state name="PickItem_30000655">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000655" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_amp_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000655"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000655">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000655">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000655">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000656 -->
	<state name="PickItem_30000656">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000656" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/SF/Indoor/sf_in_prop_bed_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000656"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000656">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000656">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000656">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000657 -->
	<state name="PickItem_30000657">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000657" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Iceland/Indoor/ic_in_prop_bed_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000657"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000657">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000657">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000657">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000658 -->
	<state name="PickItem_30000658">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000658" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_ringer_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000658"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000658">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000658">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000658">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000659 -->
	<state name="PickItem_30000659">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000659" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Indoor/co_in_prop_guestbook_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000659"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000659">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000659">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000659">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000660 -->
	<state name="PickItem_30000660">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000660" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_display_B02.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000660"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000660">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000660">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000660">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000661 -->
	<state name="PickItem_30000661">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000661" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_cubric_fishtank_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000661"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000661">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000661">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000661">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000662 -->
	<state name="PickItem_30000662">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000662" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_basketball_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000662"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000662">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000662">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000662">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000663 -->
	<state name="PickItem_30000663">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000663" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_running_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000663"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000663">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000663">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000663">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000664 -->
	<state name="PickItem_30000664">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000664" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_trampoline_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000664"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000664">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000664">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000664">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000665 -->
	<state name="PickItem_30000665">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000665" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_baseballcart_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000665"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000665">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000665">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000665">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000666 -->
	<state name="PickItem_30000666">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000666" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_basketball_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000666"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000666">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000666">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000666">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000667 -->
	<state name="PickItem_30000667">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000667" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_handball_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000667"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000667">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000667">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000667">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000668 -->
	<state name="PickItem_30000668">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000668" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_cranegame_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000668"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000668">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000668">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000668">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000669 -->
	<state name="PickItem_30000669">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000669" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_chandelier_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000669"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000669">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000669">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000669">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000670 -->
	<state name="PickItem_30000670">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000670" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_goalpost_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000670"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000670">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000670">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000670">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000671 -->
	<state name="PickItem_30000671">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000671" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_photosticker_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000671"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000671">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000671">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000671">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000672 -->
	<state name="PickItem_30000672">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000672" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_pingpong_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000672"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000672">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000672">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000672">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000673 -->
	<state name="PickItem_30000673">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000673" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_pooltable_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000673"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000673">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000673">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000673">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000674 -->
	<state name="PickItem_30000674">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000674" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_pump_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000674"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000674">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000674">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000674">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000675 -->
	<state name="PickItem_30000675">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000675" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_sewingmachine_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000675"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000675">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000675">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000675">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000676 -->
	<state name="PickItem_30000676">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000676" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_soccertable_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000676"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000676">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000676">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000676">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000677 -->
	<state name="PickItem_30000677">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000677" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Field/ry_fi_prop_plane_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000677"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000677">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000677">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000677">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000678 -->
	<state name="PickItem_30000678">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000678" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Field/ry_fi_prop_hammock_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000678"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000678">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000678">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000678">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000679 -->
	<state name="PickItem_30000679">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000679" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Field/ry_fi_prop_yacht_A02.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000679"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000679">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000679">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000679">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000680 -->
	<state name="PickItem_30000680">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000680" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_grill_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000680"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000680">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000680">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000680">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000681 -->
	<state name="PickItem_30000681">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000681" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Orient/Field/or_fi_prop_seesaw_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000681"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000681">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000681">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000681">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000682 -->
	<state name="PickItem_30000682">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000682" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_display_E01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000682"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000682">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000682">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000682">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000683 -->
	<state name="PickItem_30000683">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000683" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Orient/Field/or_fi_prop_ship_A02.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000683"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000683">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000683">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000683">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000684 -->
	<state name="PickItem_30000684">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000684" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Ludibrium/Field/lu_fi_prop_rocket_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000684"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000684">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000684">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000684">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000685 -->
	<state name="PickItem_30000685">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000685" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Lith/Field/li_fi_prop_anchor_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000685"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000685">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000685">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000685">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000686 -->
	<state name="PickItem_30000686">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000686" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Lith/Field/li_fi_prop_tube_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000686"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000686">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000686">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000686">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000687 -->
	<state name="PickItem_30000687">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000687" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_beanbag_A02.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000687"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000687">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000687">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000687">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000688 -->
	<state name="PickItem_30000688">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000688" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_surgerylamp_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000688"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000688">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000688">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000688">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000689 -->
	<state name="PickItem_30000689">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000689" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_surgery_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000689"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000689">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000689">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000689">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000690 -->
	<state name="PickItem_30000690">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000690" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_sofa_D01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000690"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000690">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000690">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000690">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000691 -->
	<state name="PickItem_30000691">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000691" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_paintbag_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000691"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000691">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000691">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000691">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000692 -->
	<state name="PickItem_30000692">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000692" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_dresser_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000692"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000692">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000692">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000692">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000693 -->
	<state name="PickItem_30000693">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000693" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_massage_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000693"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000693">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000693">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000693">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000694 -->
	<state name="PickItem_30000694">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000694" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Indoor/ke_in_prop_catower_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000694"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000694">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000694">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000694">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000695 -->
	<state name="PickItem_30000695">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000695" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Npc/Etc/UGC_SportsCar_Npc/UGC_SportsCar_Npc_02.nif" isOutline="1" scale="1.2"  rotateZ="315" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000695"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000695">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000695">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000695">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000696 -->
	<state name="PickItem_30000696">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000696" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Npc/Etc/UGC_F1RacingCar/UGC_F1RacingCar_01.nif" isOutline="1" scale="1.2"  rotateZ="315" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000696"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000696">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000696">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000696">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000697 -->
	<state name="PickItem_30000697">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000697" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Npc/Etc/UGC_Poclain/UGC_Poclain_01.nif" isOutline="1" scale="1.2"  rotateZ="315" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000697"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000697">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000697">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000697">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000698 -->
	<state name="PickItem_30000698">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000698" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Npc/Etc/UGC_FlameBike_Npc/UGC_FlameBike_03.nif" isOutline="1" scale="1.2"  rotateZ="315" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000698"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000698">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000698">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000698">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000699 -->
	<state name="PickItem_30000699">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000699" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Field/co_fi_prop_tent_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000699"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000699">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000699">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000699">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000700 -->
	<state name="PickItem_30000700">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000700" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Royalcity/Indoor/ry_in_prop_djtable_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000700"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000700">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000700">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000700">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000701 -->
	<state name="PickItem_30000701">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000701" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Indoor/co_in_prop_security_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000701"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000701">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000701">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000701">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000702 -->
	<state name="PickItem_30000702">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000702" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Tria/Indoor/tr_in_prop_workit_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000702"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000702">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000702">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000702">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000703 -->
	<state name="PickItem_30000703">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000703" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Steampunk/Field/sp_fi_prop_anvil_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000703"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000703">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000703">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000703">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000704 -->
	<state name="PickItem_30000704">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000704" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Steampunk/Field/sp_fi_prop_bellows_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000704"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000704">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000704">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000704">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000705 -->
	<state name="PickItem_30000705">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000705" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Steampunk/Field/sp_fi_prop_brazier_C01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000705"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000705">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000705">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000705">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000706 -->
	<state name="PickItem_30000706">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000706" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Indoor/co_in_prop_icebox_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000706"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000706">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000706">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000706">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000707 -->
	<state name="PickItem_30000707">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000707" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Henesys/Indoor/he_in_prop_cushiona_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000707"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000707">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000707">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000707">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000708 -->
	<state name="PickItem_30000708">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000708" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Effect/BG/Liftup/co_liftup_piano_B01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000708"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000708">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000708">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000708">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000709 -->
	<state name="PickItem_30000709">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000709" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Effect/BG/Liftup/co_liftup_vibraphone_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000709"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000709">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000709">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000709">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000710 -->
	<state name="PickItem_30000710">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000710" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Common/Indoor/co_in_prop_camera_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000710"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000710">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000710">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000710">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000711 -->
	<state name="PickItem_30000711">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000711" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/UGC/Indoor/ugc_in_funct_workstone_G01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000711"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000711">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000711">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000711">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000712 -->
	<state name="PickItem_30000712">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000712" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Orient/Indoor/or_in_prop_incense_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000712"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000712">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000712">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000712">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000713 -->
	<state name="PickItem_30000713">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000713" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Steampunk/Indoor/sp_in_prop_desk_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000713"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000713">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000713">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000713">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000714 -->
	<state name="PickItem_30000714">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000714" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/SF/Field/sf_fi_prop_incubator_D01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000714"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000714">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000714">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000714">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000715 -->
	<state name="PickItem_30000715">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000715" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Steampunk/Field/sp_fi_prop_brazier_A01.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000715"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000715">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000715">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000715">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

<!-- 	30000716 -->
	<state name="PickItem_30000716">	
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="1" />	<!-- DownArrow -->							
			<action name="SetUserValue" key="ItemNumber" value="30000716" />					
			<action name="AddEffectNif" spawnPointID="1001" nifPath="Map/Kerningcity/Field/ke_fi_prop_tire_A02.nif" isOutline="1" scale="1.2"  rotateZ="225" />		
		</onEnter>
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="0">  	
					<transition state="DetectItem_30000716"/>	
				</condition>	
		<onExit>
		</onExit>
	</state>	

	<state name="DetectItem_30000716">	
		<onEnter>
		</onEnter>	
		<condition name="DetectLiftableObject" triggerBoxIDs="9201" itemID="30000716">  	<!-- 정답 -->
					<transition state="RightItem"/>
				</condition>	
		<condition name="!DetectLiftableObject" triggerBoxIDs="9201" itemID="30000716">  	<!-- 오답 -->  	
					<transition state="WrongItem"/>
				</condition>					
		<onExit>
		</onExit>
	</state>	

	
<!-- 미션 성공 -->	
	<state name="RightItem">
		<onEnter>		
			<action name="이펙트를설정한다" arg1="5101" arg2="0" />	<!-- DownArrow -->							
			<action name="PlaySystemSoundInBox" arg1="9900" arg2="System_PartTimeJob_Right_01"/>				
			<action name="RemoveEffectNif" spawnPointID="1001" />					
			<action name="대화를설정한다" arg1="1" arg2="1001" arg3="$02000387_BF__1001_CUSTOMER__0$" arg4="3" arg5="0" />		
			<action name="버프를걸어준다" arg1="9900" arg2="70000112" arg3="1" arg4="0" arg5="0" />				
		</onEnter>
				<condition name="WaitTick" waitTick="3000">	
					<transition state="CustomerLeave"/>
				</condition>	
		<onExit>	
		</onExit>
	</state>	
	<state name="CustomerLeave">	
		<onEnter>	
			<action name="NPC를이동시킨다" arg1="1001" arg2="MS2PatrolData_111" />		
		</onEnter>
				<condition name="NPC를감지했으면" arg1="9301" arg2="1001">	
					<transition state="Quit"/>
				</condition>	
		<onExit>
		</onExit>
	</state>	
	 
    <state name="Quit">
        <onEnter>	
			<action name="몬스터소멸시킨다" arg1="1001"/>					
        </onEnter>
				<condition name="WaitTick" waitTick="3000">	
					<transition state="Wait"/>
				</condition>			
    <onExit>
    </onExit>
    </state> 		

<!-- 잘못된 아이템을 내려놓으면 -->	
	<state name="WrongItem">
		<onEnter>	
			<action name="이펙트를설정한다" arg1="5101" arg2="0" />	<!-- DownArrow -->					
			<action name="PlaySystemSoundInBox" arg1="9900" arg2="System_PartTimeJob_Wrong_01"/>		
			<action name="RemoveEffectNif" spawnPointID="1001" />				
			<action name="대화를설정한다" arg1="1" arg2="1001" arg3="$02000387_BF__1001_CUSTOMER__1$" arg4="3" arg5="0" />		
		</onEnter>	
				<condition name="WaitTick" waitTick="3500">	
					<transition state="WrongItemReturn"/>		
				</condition>	
		<onExit>	
		</onExit>
	</state>	
	<state name="WrongItemReturn">
		<onEnter>		
		</onEnter>	
				<condition name="UserValue" key="ItemNumber" value="30000617" >	
					<transition state="PickItem_30000617"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000618" >	
					<transition state="PickItem_30000618"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000619" >	
					<transition state="PickItem_30000619"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000620" >	
					<transition state="PickItem_30000620"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000621" >	
					<transition state="PickItem_30000621"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000622" >	
					<transition state="PickItem_30000622"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000623" >	
					<transition state="PickItem_30000623"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000624" >	
					<transition state="PickItem_30000624"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000625" >	
					<transition state="PickItem_30000625"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000626" >	
					<transition state="PickItem_30000626"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000627" >	
					<transition state="PickItem_30000627"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000628" >	
					<transition state="PickItem_30000628"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000629" >	
					<transition state="PickItem_30000629"/>	
				</condition>						
				<condition name="UserValue" key="ItemNumber" value="30000630" >	
					<transition state="PickItem_30000630"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000631" >	
					<transition state="PickItem_30000631"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000632" >	
					<transition state="PickItem_30000632"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000633" >	
					<transition state="PickItem_30000633"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000634" >	
					<transition state="PickItem_30000634"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000635" >	
					<transition state="PickItem_30000635"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000636" >	
					<transition state="PickItem_30000636"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000637" >	
					<transition state="PickItem_30000637"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000638" >	
					<transition state="PickItem_30000638"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000639" >	
					<transition state="PickItem_30000639"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000640" >	
					<transition state="PickItem_30000640"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000641" >	
					<transition state="PickItem_30000641"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000642" >	
					<transition state="PickItem_30000642"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000643" >	
					<transition state="PickItem_30000643"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000644" >	
					<transition state="PickItem_30000644"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000645" >	
					<transition state="PickItem_30000645"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000646" >	
					<transition state="PickItem_30000646"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000647" >	
					<transition state="PickItem_30000647"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000648" >	
					<transition state="PickItem_30000648"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000649" >	
					<transition state="PickItem_30000649"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000650" >	
					<transition state="PickItem_30000650"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000651" >	
					<transition state="PickItem_30000651"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000652" >	
					<transition state="PickItem_30000652"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000653" >	
					<transition state="PickItem_30000653"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000654" >	
					<transition state="PickItem_30000654"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000655" >	
					<transition state="PickItem_30000655"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000656" >	
					<transition state="PickItem_30000656"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000657" >	
					<transition state="PickItem_30000657"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000658" >	
					<transition state="PickItem_30000658"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000659" >	
					<transition state="PickItem_30000659"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000660" >	
					<transition state="PickItem_30000660"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000661" >	
					<transition state="PickItem_30000661"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000662" >	
					<transition state="PickItem_30000662"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000663" >	
					<transition state="PickItem_30000663"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000664" >	
					<transition state="PickItem_30000664"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000665" >	
					<transition state="PickItem_30000665"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000666" >	
					<transition state="PickItem_30000666"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000667" >	
					<transition state="PickItem_30000667"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000668" >	
					<transition state="PickItem_30000668"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000669" >	
					<transition state="PickItem_30000669"/>	
				</condition>	
				<condition name="UserValue" key="ItemNumber" value="30000670" >	
					<transition state="PickItem_30000670"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000671" >	
					<transition state="PickItem_30000671"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000672" >	
					<transition state="PickItem_30000672"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000673" >	
					<transition state="PickItem_30000673"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000674" >	
					<transition state="PickItem_30000674"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000675" >	
					<transition state="PickItem_30000675"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000676" >	
					<transition state="PickItem_30000676"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000677" >	
					<transition state="PickItem_30000677"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000678" >	
					<transition state="PickItem_30000678"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000679" >	
					<transition state="PickItem_30000679"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000680" >	
					<transition state="PickItem_30000680"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000681" >	
					<transition state="PickItem_30000681"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000682" >	
					<transition state="PickItem_30000682"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000683" >	
					<transition state="PickItem_30000683"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000684" >	
					<transition state="PickItem_30000684"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000685" >	
					<transition state="PickItem_30000685"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000686" >	
					<transition state="PickItem_30000686"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000687" >	
					<transition state="PickItem_30000687"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000688" >	
					<transition state="PickItem_30000688"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000689" >	
					<transition state="PickItem_30000689"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000690" >	
					<transition state="PickItem_30000690"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000691" >	
					<transition state="PickItem_30000691"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000692" >	
					<transition state="PickItem_30000692"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000693" >	
					<transition state="PickItem_30000693"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000694" >	
					<transition state="PickItem_30000694"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000695" >	
					<transition state="PickItem_30000695"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000696" >	
					<transition state="PickItem_30000696"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000697" >	
					<transition state="PickItem_30000697"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000698" >	
					<transition state="PickItem_30000698"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000699" >	
					<transition state="PickItem_30000699"/>	
				</condition>			
				<condition name="UserValue" key="ItemNumber" value="30000700" >	
					<transition state="PickItem_30000700"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000701" >	
					<transition state="PickItem_30000701"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000702" >	
					<transition state="PickItem_30000702"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000703" >	
					<transition state="PickItem_30000703"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000704" >	
					<transition state="PickItem_30000704"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000705" >	
					<transition state="PickItem_30000705"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000706" >	
					<transition state="PickItem_30000706"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000707" >	
					<transition state="PickItem_30000707"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000708" >	
					<transition state="PickItem_30000708"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000709" >	
					<transition state="PickItem_30000709"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000710" >	
					<transition state="PickItem_30000710"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000711" >	
					<transition state="PickItem_30000711"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000712" >	
					<transition state="PickItem_30000712"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000713" >	
					<transition state="PickItem_30000713"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000714" >	
					<transition state="PickItem_30000714"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000715" >	
					<transition state="PickItem_30000715"/>	
				</condition>		
				<condition name="UserValue" key="ItemNumber" value="30000716" >	
					<transition state="PickItem_30000716"/>	
				</condition>						
		<onExit>	
		</onExit>
	</state>			
</ms2>
<?xml version="1.0" encoding="utf-8"?>
<!-- 선후 관계에서 순간적으로 바닥이 투명하게 보이는 것을 막기 위해 delay 값으로 Befor / After state 구분 -->

<ms2>
	<state name="Wait">   
        <onEnter> 				
		  <action name="SetUserValue" key="Color24" value="10" />				
		  <action name="메쉬를설정한다" arg1="824" arg2="1" arg3="0" arg4="0" arg5="0" /> 	<!-- yellow -->	
		  <action name="메쉬를설정한다" arg1="924" arg2="0" arg3="0" arg4="0" arg5="0" /> 	<!-- green -->			  
		  <action name="메쉬를설정한다" arg1="1024" arg2="0" arg3="0" arg4="0" arg5="0" /> <!-- red -->				  
        </onEnter>	
			<condition name="UserValue" key="ColorStart" value="1"> 
					<transition state="YellowBefore"/>
				</condition> 						
    <onExit> 
    </onExit> 
    </state>

<!-- Yellow Before -->	
    <state name="YellowBefore">
        <onEnter>
		  <action name="메쉬를설정한다" arg1="824" arg2="1" arg3="0" arg4="0" arg5="2" /> 	<!-- yellow -->	
		  <action name="메쉬를설정한다" arg1="924" arg2="0" arg3="0" arg4="0" arg5="0" /> 	<!-- green -->			  
		  <action name="메쉬를설정한다" arg1="1024" arg2="0" arg3="0" arg4="0" arg5="0" /> <!-- red -->		
        </onEnter>	
			<condition name="UserValue" key="ColorClear" value="1">
					<transition state="Clear"/>
				</condition> 			
			<condition name="UserValue" key="ColorReset" value="1">	
					<transition state="Reset"/>
				</condition> 				
			<condition name="UserValue" key="ColorEnd" value="1">	
					<transition state="Regen"/>
				</condition> 				
			<condition name="UserValue" key="Color24" value="2"> 
					<transition state="GreenAfter"/>
				</condition> 				
			<condition name="UserValue" key="Color24" value="3">
					<!-- <transition state="YellowtoRed"/> -->
				</condition> 				
    <onExit>   
    </onExit>
    </state>			

<!-- Red Before -->	
    <state name="RedBefore">
        <onEnter>
		  <action name="메쉬를설정한다" arg1="1024" arg2="1" arg3="0" arg4="0" arg5="0" /> <!-- red -->				
		  <action name="메쉬를설정한다" arg1="924" arg2="0" arg3="0" arg4="0" arg5="0" /> 	<!-- green -->			
		  <action name="메쉬를설정한다" arg1="824" arg2="0" arg3="0" arg4="0" arg5="0" /> 	<!-- yellow -->	  
        </onEnter>	
			<condition name="UserValue" key="ColorClear" value="1">
					<transition state="Clear"/>
				</condition> 			
			<condition name="UserValue" key="ColorReset" value="1">	
					<transition state="Reset"/>
				</condition> 				
			<condition name="UserValue" key="ColorEnd" value="1">	
					<transition state="Regen"/>
				</condition> 				
			<condition name="UserValue" key="Color24" value="1">
					<transition state="YellowAfter"/>
				</condition> 
			<condition name="UserValue" key="Color24" value="2">
					<transition state="GreenAfter"/>
				</condition> 					
    <onExit>   
    </onExit>
    </state>			
	
<!-- Green After -->	
    <state name="GreenAfter">
        <onEnter>
		  <action name="메쉬를설정한다" arg1="924" arg2="1" arg3="0" arg4="0" arg5="0" /> 	<!-- green -->			
        </onEnter>	
			<condition name="UserValue" key="ColorClear" value="1">
					<transition state="Clear"/>
				</condition> 			
			<condition name="UserValue" key="ColorReset" value="1">	
					<transition state="Reset"/>
				</condition> 				
			<condition name="UserValue" key="ColorEnd" value="1">	
					<transition state="Regen"/>
				</condition> 				
			<condition name="UserValue" key="Color24" value="1"> 		
					<transition state="YellowAfter"/>
				</condition> 
			<condition name="UserValue" key="Color24" value="3">
					<transition state="RedAfter"/>
				</condition> 									
    <onExit>   
    </onExit>
    </state>			


<!-- Yellow After -->	
    <state name="YellowAfter">
        <onEnter>
		  <action name="메쉬를설정한다" arg1="824" arg2="1" arg3="0" arg4="0" arg5="2" /> 	<!-- yellow -->	
		  <action name="메쉬를설정한다" arg1="924" arg2="0" arg3="0" arg4="0" arg5="0" /> 	<!-- green -->			  
		  <action name="메쉬를설정한다" arg1="1024" arg2="0" arg3="100" arg4="0" arg5="0" /> <!-- red -->		
        </onEnter>	
			<condition name="UserValue" key="ColorClear" value="1">
					<transition state="Clear"/>
				</condition> 			
			<condition name="UserValue" key="ColorReset" value="1">	
					<transition state="Reset"/>
				</condition> 				
			<condition name="UserValue" key="ColorEnd" value="1">	
					<transition state="Regen"/>
				</condition> 				
			<condition name="UserValue" key="Color24" value="2"> 
					<transition state="GreenAfter"/>
				</condition> 				
			<condition name="UserValue" key="Color24" value="3">
					<transition state="RedAfter"/>
				</condition> 			
    <onExit>   
    </onExit>
    </state>		
	
<!-- Red After -->	
    <state name="RedAfter">
        <onEnter>
		  <action name="메쉬를설정한다" arg1="1024" arg2="1" arg3="0" arg4="0" arg5="0" /> <!-- red -->				
		  <action name="메쉬를설정한다" arg1="924" arg2="0" arg3="0" arg4="0" arg5="0" /> 	<!-- green -->			
		  <action name="메쉬를설정한다" arg1="824" arg2="0" arg3="100" arg4="0" arg5="0" /> 	<!-- yellow -->	  
        </onEnter>	
			<condition name="UserValue" key="ColorClear" value="1">
					<transition state="Clear"/>
				</condition> 			
			<condition name="UserValue" key="ColorReset" value="1">	
					<transition state="Reset"/>
				</condition> 				
			<condition name="UserValue" key="ColorEnd" value="1">	
					<transition state="Regen"/>
				</condition> 				
			<condition name="UserValue" key="Color24" value="1">
					<transition state="YellowAfter"/>
				</condition> 
			<condition name="UserValue" key="Color24" value="2">
					<transition state="GreenAfter"/>
				</condition> 				
    <onExit>   
    </onExit>
    </state>				
	
<!-- All Clear -->	
    <state name="Clear">
        <onEnter>
		  <action name="메쉬를설정한다" arg1="924" arg2="0" arg3="0" arg4="0" arg5="2" /> 	<!-- green -->			
		  <action name="메쉬를설정한다" arg1="824" arg2="0" arg3="0" arg4="0" arg5="2" /> 	<!-- yellow -->	  
		  <action name="메쉬를설정한다" arg1="1024" arg2="0" arg3="0" arg4="0" arg5="2" /> <!-- red -->		
        </onEnter>	
			<condition name="UserValue" key="ColorEnd" value="1"> 		
					<transition state="Regen"/>
				</condition> 				
    <onExit>   
    </onExit>
    </state>	

<!-- Regen -->	
    <state name="Regen">
        <onEnter>
		  <action name="SetUserValue" key="ColorStart" value="0" />	<!-- Pattern Trigger-->		
		  <action name="SetUserValue" key="ColorEnd" value="0" />	<!-- Main Trigger-->		
		  <action name="SetUserValue" key="ColorReset" value="0" />	<!-- Sensor Trigger-->			
		  <action name="SetUserValue" key="ColorClear" value="0" />	<!-- Sensor Trigger-->					
		  <action name="메쉬를설정한다" arg1="824" arg2="1" arg3="400" arg4="0" arg5="0" /> 	<!-- yellow -->	
		  <action name="메쉬를설정한다" arg1="924" arg2="0" arg3="0" arg4="0" arg5="0" /> 	<!-- green -->			  
		  <action name="메쉬를설정한다" arg1="1024" arg2="0" arg3="0" arg4="0" arg5="0" /> <!-- red -->		
        </onEnter>	
			<condition name="WaitTick" waitTick="1000">
					<transition state="Wait"/>
				</condition> 				
    <onExit>   
    </onExit>
    </state>		

<!-- Reset -->		
    <state name="Reset">
        <onEnter>
		  <action name="SetUserValue" key="ColorStart" value="0" />	<!-- Pattern Trigger-->		
		  <action name="SetUserValue" key="ColorReset" value="0" />	<!-- Sensor Trigger-->			
		  <action name="SetUserValue" key="ColorClear" value="0" />	<!-- Sensor Trigger-->			
        </onEnter>	
			<condition name="UserValue" key="ColorEnd" value="1"> 		
					<transition state="Wait"/>
				</condition> 				
    <onExit>   
		  <action name="SetUserValue" key="ColorEnd" value="0" />	<!-- Main Trigger-->			
    </onExit>
    </state>			
</ms2>

